# Make an empty dataframe. This dataframe will be used to make the heatmap
Carrier = ['AA', 'AS', 'DL', 'EV', 'MQ', 'NW', 'OH', 'OO', 'UA', 'US', 'XE', 'YV']  # List all carriers
months = [1,2,3,4,5,6,7,8,9,10,11,12]
df_heatmap = pd.DataFrame(columns=Carrier, index=months)

# fill the heatmap dataframe with data from df_canceled_ord_2008_month_carrier 
for i in range(0, len(df_canceled_ord_2008_month_carrier)):
    month = df_canceled_ord_2008_month_carrier.iloc[i]['Month']
    airline = df_canceled_ord_2008_month_carrier.iloc[i]['UniqueCarrier']
    count = df_canceled_ord_2008_month_carrier.iloc[i]['Counts']
    
    df_heatmap.loc[month, airline] = count
    
# fill NaN value with 0
df_heatmap = df_heatmap.fillna(0).astype(int)

df_heatmap

# plot the heatmap
plt.figure(figsize = [15,10])
ax = sb.heatmap(df_heatmap, annot = True, fmt = 'd', linewidths=.5, cmap="YlGnBu",cbar_kws={'label': 'Number of Canceled Flights'});
plt.xlabel("Airlines");
plt.ylabel("Month in 2008");
plt.title("Figure 4: Canceled Flights Due To NAS Reason In 2008");
# edit commit message from the previous commit

# Add a subplot, there are still more work on the legend position
# plot a multivariable line plot, left y-axis is flight volume, right y-axis is percetage of NAS cancellation
fig = plt.figure(figsize = [10,5])
dots = sb.load_dataset("dots").query("align == 'dots'")

ax1 = fig.add_subplot(111) # Create matplotlib axes
ax2 = ax1.twinx()           # Create another axes that shares the same 'YEAR' x-axis as ax1.

# left y-axis: flight number
sb.pointplot(data=df_ord_years, x='Year', y='TotalFlight', hue='UniqueCarrier', ax=ax1, palette=sb.color_palette("RdBu", 4))

# right y-axis: % of NAS cancelation
sb.pointplot(data=df_ord_years, x='Year', y='NAS(%)', hue='UniqueCarrier', linestyles='--', palette=sb.color_palette("RdBu", 4),ax=ax2,legend=False)

# add labels and ticks etc
plt.xticks(rotation=30)
plt.title("Figure 9: ORD Flight Volumn and NAS Cancellation Trend from 2003 - 2008 (AA/MQ/OO/UA)");
plt.xlabel("Year")
ax1.set_ylabel("Number of Total Flights")
ax2.set_ylabel('NAS Canellation (%)')

# add legend

SolidHandles, SolidLabels = solid.get_legend_handles_labels()
DashHandles, DashLabels = dash.get_legend_handles_labels()

SolidLabels = ['AA Total Flights', 'MQ Total Flights', 'OO Total Flights', 'UA Total Flights']
DashLabels = ['AA Cancellation', 'MQ Cancellation', 'OO Cancellation', 'UA Cancellation']

SolidLegend = solid.legend(SolidHandles, SolidLabels, loc=0, bbox_to_anchor=(0,0,1.4,0.9), title ="Legend: Total Flights")
DashLegend = dash.legend(DashHandles, DashLabels, loc=0, bbox_to_anchor=(0,0,1.4,0.6), title = "Legend: Cancellation")

plt.show();
